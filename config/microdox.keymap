 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    retro-tap;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <75>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_capslock {
            timeout-ms = <75>;
            key-positions = <2 3>;
            bindings = <&kp CAPS>;
        };
        combo_mute {
            timeout-ms = <75>;
            key-positions = <6 7>;
            bindings = <&kp C_MUTE>;
        };
        combo_insert {
            timeout-ms = <75>;
            key-positions = <8 9>;
            bindings = <&kp INS>;
        };        
        combo_alt {
            timeout-ms = <75>;
            key-positions = <10 11>;
            bindings = <&kp LALT>;
        };        
        combo_TAB {
            timeout-ms = <75>;
            key-positions = <12 13>;
            bindings = <&kp TAB>;
        };
        combo_winTAB {
            timeout-ms = <75>;
            key-positions = <14 15>;
            bindings = <&kp LG(TAB)>;
        };
        combo_del {
            timeout-ms = <75>;
            key-positions = <16 17>;
            bindings = <&kp DEL>;
        };
        combo_explorer {
            timeout-ms = <75>;
            key-positions = <18 19>;
            bindings = <&kp LG(E)>;
        };
        combo_ctrl {
            timeout-ms = <75>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL>;
        };
        combo_undo {
            timeout-ms = <75>;
            key-positions = <22 23>;
            bindings = <&kp LC(Z)>;
        };
        combo_redo {
            timeout-ms = <75>;
            key-positions = <26 27>;
            bindings = <&kp LS(LC(Z))>;
        };
        combo_semicolon {
            timeout-ms = <75>;
            key-positions = <27 28>;
            bindings = <&kp SEMI>;
        };
        combo_closeWin {
            timeout-ms = <75>;
            key-positions = <28 29>;
            bindings = <&kp LA(F4)>;
        };
        combo_Lgui {
            timeout-ms = <75>;
            key-positions = <30 31>;
            bindings = <&kp LGUI>;
        };
        combo_Rgui {
            timeout-ms = <75>;
            key-positions = <34 35>;
            bindings = <&kp LGUI>;
        };
        combo_BT1 {
            timeout-ms = <75>;
            key-positions = <0 24>;
            bindings = <&bt BT_SEL 0>;
        };
        combo_BT2 {
            timeout-ms = <75>;
            key-positions = <1 24>;
            bindings = <&bt BT_SEL 1>;
        };
        combo_BT3 {
            timeout-ms = <75>;
            key-positions = <2 24>;
            bindings = <&bt BT_SEL 2>;
        };
        combo_BT4 {
            timeout-ms = <75>;
            key-positions = <3 24>;
            bindings = <&bt BT_SEL 3>;
        };
        combo_BT5 {
            timeout-ms = <75>;
            key-positions = <4 24>;
            bindings = <&bt BT_SEL 4>;
        };
        combo_BTclr {
            timeout-ms = <75>;
            key-positions = <10 24>;
            bindings = <&bt BT_CLR>;
        };
        combo_BT_1 {
            timeout-ms = <75>;
            key-positions = <5 25>;
            bindings = <&bt BT_SEL 0>;
        };
        combo_BT_2 {
            timeout-ms = <75>;
            key-positions = <6 25>;
            bindings = <&bt BT_SEL 1>;
        };
        combo_BT_3 {
            timeout-ms = <75>;
            key-positions = <7 25>;
            bindings = <&bt BT_SEL 2>;
        };
        combo_BT_4 {
            timeout-ms = <75>;
            key-positions = <8 25>;
            bindings = <&bt BT_SEL 3>;
        };
        combo_BT_5 {
            timeout-ms = <75>;
            key-positions = <9 25>;
            bindings = <&bt BT_SEL 4>;
        };
        combo_BT_clr {
            timeout-ms = <75>;
            key-positions = <15 25>;
            bindings = <&bt BT_CLR>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  | ENT |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | NUM | NAV | BKSP |   | SPC | SYM  | FUN |
                        bindings = <
   &kp Q        &kp W       &kp E       &kp R       &kp T               &kp Y       &kp U       &kp I       &kp O       &kp P
   &kp A        &kp S       &kp D       &kp F       &kp G               &kp H       &kp J       &kp K       &kp L       &kp RET
   &kp Z        &kp X       &kp C       &kp V       &kp B               &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH
                            &mo 3       &mo 1       &hm LSHIFT BSPC     &hm LSHIFT SPACE   &mo 2       &mo 4
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |alt-Q|alt-W|alt-E|alt-R|alt-T|   |     | HOME |  UP  | END | PGUP |
// |alt-A|alt-S|alt-D|alt-F|alt-G|   |     | LEFT | DOWN | RGT | PGDN |
// |alt-Z|alt-X|alt-C|alt-V|alt-B|   |     | PREV |  F5  | NEXT| menu |
//             |BTCLR|     |BTNXT|   | KOR | TAB  | HANJA|
                        bindings = <
   &kp LA(Q)    &kp LA(W)   &kp LA(E)   &kp LA(R)   &kp LA(T)           &trans      &kp HOME    &kp UP      &kp END     &kp PG_UP
   &kp LA(A)    &kp LA(S)   &kp LA(D)   &kp LA(F)   &kp LA(G)           &trans      &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN
   &kp LA(Z)    &kp LA(X)   &kp LA(C)   &kp LA(V)   &kp LA(B)           &trans      &kp LA(LEFT)  &kp F5    &kp LA(RIGHT)  &kp K_APPLICATION
                            &bt BT_CLR  &trans      &bt BT_NXT          &kp LANG_HANGEUL &kp TAB &kp LANG_HANJA
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  ~  |  `  |
// |  \  |  :  |  '  |  "  |  (  |   |  )  | LEFT| MUTE| RGT |     |
// |  |  |     |  _  |  {  |  [  |   |  ]  |  }  |     |     |     |
//             |     |S-TAB|     |   |     |     |     |
                        bindings = <
   &kp EXCL     &kp AT      &kp HASH        &kp DLLR        &kp PRCNT         &kp CARET     &kp AMPS        &kp ASTRK       &kp TILDE       &kp GRAVE
   &kp BSLH     &kp COLON   &kp SQT         &kp DQT         &kp LPAR          &kp RPAR      &kp LEFT        &kp C_MUTE      &kp RIGHT       &trans
   &kp PIPE     &trans      &kp UNDER       &kp LBRC        &kp LBKT          &kp RBKT      &kp RBRC        &trans          &trans          &trans
                            &trans          &kp LS(TAB)     &trans            &trans        &trans          &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |Ctr-Q|Ctr-W|Ctr-E|Ctr-R|Ctr-T|   |  =  |  7  |  8  |  9  |  *  |
// |Ctr-A|Ctr-S|Ctr-D|Ctr-F|Ctr-G|   |  +  |  4  |  5  |  6  | ENT |
// |Ctr-Z|Ctr-X|Ctr-C|Ctr-V|Ctr-B|   |  -  |  1  |  2  |  3  |  /  |
//             |     |     |     |   | TAB |  0  |  .  |
                        bindings = <
   &kp LC(Q) &kp LC(W) &kp LC(E) &kp LC(R) &kp LC(T)    &kp EQUAL  &kp N7  &kp N8 &kp N9 &kp ASTRK
   &kp LC(A) &kp LC(S) &kp LC(D) &kp LC(F) &kp LC(G)    &kp PLUS  &kp N4  &kp N5 &kp N6 &kp RET
   &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(B)    &kp MINUS  &kp N1  &kp N2 &kp N3 &kp FSLH
                 &trans &trans &trans    &kp TAB &kp N0 &kp DOT
                        >;
                };
                
                fun_layer {
// -----------------------------------------------------------------------------------------
// | F1  | F2  | F3  | F4  | PrSc|   | BT1 | BT2 | BT3 | BT4 | BT5 |
// | F5  | F6  | F7  | F8  |     |   |BTclr|     |     |     |     |
// | F9  | F10 | F11 | F12 |     |   |     |     |     |     |     |
//             |     |     |     |   |     |     |     |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp PRINTSCREEN  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
   &kp F5 &kp F6 &kp F7 &kp F8 &trans   &bt BT_CLR &trans &trans &trans &trans
   &kp F9 &kp F10 &kp F11 &kp F12 &trans    &trans &trans &trans &trans &trans
        &trans &trans &trans    &trans &trans &trans
                        >;
                };
        };
};
